@page "/test"
@inject Data.Database.GymServices service
@inject Data.Models.BarCode barcode

@if (barcode.IsAdmin)
{
<div class="row bg-light">
    <div class="col-5 bg-light m-2 justify-content-center">
        <div class="p-3 mb-3 text-white text-center" style="background-color: #05173D;">Add New Client Ticket</div>
        <div class="text-center p-3 mb-3">
            <label>Select Email:</label>
            <select class="form-control" @bind="@SelectedEmailAddress">
                @foreach (var client in Clients)
                {
                    <option value="@client.Email"> @client.Name </option>
                }
                }
                }
            </select>
        </div>
        <EditForm Model="@S">
            <div class="form-group">
                <label for="name" style=" color:red; font-weight:bold;">@Message</label>
            </div>
            <div class="form-group">
                <label for="name" style=" color:red; font-weight:bold;">@SelectedEmailAddress</label>
            </div>
            <div class="form-group">
                <label for="name">Subject</label>
                <input type="text" id="name" class="form-control" @bind="@Subject" />
            </div>
            <div class="form-group">
                <label for="name">Content</label>
                <input type="text" id="name" class="form-control" @bind="@Content" />
            </div>
            <div class="text-center p-3 mb-3">
                <button class="btn btn-info" @onclick="SendMail">Send mail!</button>
            </div>
        </EditForm>
    </div>
</div>
}
@code {
    Data.Models.Client S = new Data.Models.Client();
    private string Message { get; set; } = "";
    private string SelectedEmailAddress { get; set; }
    private string Subject { get; set; }
    private string Content { get; set; }
    List<Data.Models.Client> Clients = new List<Data.Models.Client>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshClients();
    }

    private async Task RefreshClients()
    {
        Clients = await service.GetClientAsync();
    }
    private void SendMail()
    {
        try
        {
            using (MailMessage mail = new MailMessage())
            {
                mail.From = new MailAddress("gymblazor@gmail.com");
                mail.To.Add(SelectedEmailAddress);
                mail.Subject = Subject;
                mail.Body = "<h3>"+Content+"</h3>";
                mail.IsBodyHtml = true;
                using (SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587))
                {
                    smtp.Credentials = new System.Net.NetworkCredential("gymblazor@gmail.com", "123456Gym");
                    smtp.EnableSsl = true;
                    smtp.Send(mail);
                    Message = "Sent";
                }
            }
        }
        catch (Exception e)
        {
            Message = e.Message;
        }
    }

}
