@page "/test"
@inject Data.Database.GymServices service
@inject Data.Models.BarCode barcode
<MatFileUpload OnChange="@FilesReady" Label="Drop a single file here or Browse"></MatFileUpload>
<img src="@src" alt="Profile" width="50" height="50">
@foreach (var f in list)
{
    <div>@f</div>
}

@code
        {
    List<string> list = new List<string>();
    IMatFileUploadEntry src { get; set; }

    void FilesReady(IMatFileUploadEntry[] files)
    {
        foreach (var file in files)
        {
            list.Add($"Name: {file.Name} - Size: {file.Size}");
            src = file;
        }
    }
}
@*@code {
    Data.Models.Client S = new Data.Models.Client();
    private string Message { get; set; } = "";
    private string SelectedEmailAddress { get; set; }
    private string Subject { get; set; }
    private string Content { get; set; }
    List<Data.Models.Client> Clients = new List<Data.Models.Client>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshClients();
    }

    private async Task RefreshClients()
    {
        Clients = await service.GetClientAsync();
    }
    private void SendMail()
    {
        try
        {
            using (MailMessage mail = new MailMessage())
            {
                mail.From = new MailAddress("gymblazor@gmail.com");
                mail.To.Add(SelectedEmailAddress);
                mail.Subject = Subject;
                mail.Body = "<h3>" + Content + "</h3>";
                mail.IsBodyHtml = true;
                using (SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587))
                {
                    smtp.Credentials = new System.Net.NetworkCredential("gymblazor@gmail.com", "123456Gym");
                    smtp.EnableSsl = true;
                    smtp.Send(mail);
                    Message = "Sent";
                }
            }
        }
        catch (Exception e)
        {
            Message = e.Message;
        }
    }

}*@
