@page "/ticket"

@inject Data.Database.GymServices service
@inject Data.Models.BarCode barcode
@if (barcode.IsAdmin)
{<div class="container">
        <div class="row bg-light">
            <div class="col-5 bg-light m-2 justify-content-center">
                <div class="p-3 mb-3 text-white text-center" style="background-color: #05173D;">Add New Client Ticket</div>
                <div class="text-center p-3 mb-3">
                    <label>Select ticket type:</label>
                    <select class="form-control" @bind="@SelectedTicketID">
                        @foreach (var ticket in SeasonTickets)
                        {
                            <option value="@ticket.TicketId"> @ticket.Name </option>
                        }
                        }
                        }
                    </select>
                </div>
                <EditForm Model="@NewTicket">
                    <div class="form-group">
                        <label for="name">Client bar code</label>
                        <input type="text" id="name" class="form-control" @bind="@BarCode" />
                    </div>
                    <div class="text-center p-3 mb-3">
                        <p>
                            <MatDatePicker @bind-Value="@Date1"></MatDatePicker>
                        </p>
                        <MatButton OnClick="@(_ =>
                              {
                                  Date1 = null;
                              })">
                            Empty
                        </MatButton>
                    </div>
                    <div class="text-center p-3 mb-3">
                        <button class="btn btn-info" @onclick="AddNewTicket"> Add Ticket</button>
                    </div>
                </EditForm>
            </div>
        </div>
    <h3 style="color:cornflowerblue;">Ticket types</h3>
        <div class="row bg-light">
            <label for="Description"></label>
            <table class="table table-bordered">
                <thead class="thead-light">
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>ValidENtries</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in SeasonTickets)
                    {
                        {
                            <tr @onclick="(() => SetSeasonTicketForUpdate(ticket))">
                                <td>@ticket.Name</td>
                                <td>@ticket.Price</td>
                                <td>@ticket.ValidEntries</td>
                                <td><button class="btn btn-danger" @onclick="(() => DeleteTicket(ticket))">Delete</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="row m-5">
            <div class="col-5 bg-light m-2 justify-content-start">

                <div class="p-3 mb-3 text-white text-center"  style="background-color: #05173D;">Add New Ticket Type</div>

                <EditForm Model="@NewTicketType">
                    <div class="form-group">
                        <label for="name">Ticket Name</label>
                        <input type="text" id="name" class="form-control" @bind="@NewTicketType.Name" />
                    </div>

                    <div class="form-group">
                        <label for="price">Price</label>
                        <input type="text" id="price" class="form-control" @bind="@NewTicketType.Price" />
                    </div>

                    <div class="form-group">
                        <label for="quantity">Valid Entries</label>
                        <input type="text" id="quantity" class="form-control" @bind="@NewTicketType.ValidEntries" />
                    </div>

                    <div class="text-center p-3 mb-3">
                        <button class="btn btn-info" @onclick="AddNewSeasonTicket"> Add New Ticket</button>
                    </div>
                </EditForm>
            </div>

            <div class="col-5 bg-light m-2 justify-content-end">
                <div class="p-3 mb-1 text-white text-center"  style="background-color: #05173D;">Update Ticket</div>

                <EditForm Model="@UpdateSeasonTicket">
                    <div class="form-group">
                        <label for="name">Ticket Name</label>
                        <input type="text" id="name" class="form-control" @bind="@UpdateSeasonTicket.Name" />
                    </div>

                    <div class="form-group">
                        <label for="price">Price</label>
                        <input type="text" id="price" class="form-control" @bind="@UpdateSeasonTicket.Price" />
                    </div>

                    <div class="form-group">
                        <label for="quantity">Valid Entries</label>
                        <input type="text" id="quantity" class="form-control" @bind="@UpdateSeasonTicket.ValidEntries" />
                    </div>


                    <div class="text-center p-3 mb-3">
                        <button class="btn btn-info" @onclick="UpdateClientData"> Update Ticket</button>
                    </div>
                </EditForm>
            </div>

        </div>
    <h3 style="color:cornflowerblue;">Current tickets</h3>
        <div class="row bg-light">
            <label for="Description"></label>
            <table class="table table-bordered">
                <thead class="thead-light">
                    <tr>
                        <th>ClientId</th>
                        <th>TicketId</th>
                        <th>Name</th>
                        <th>Bought</th>
                        <th>BarCode</th>
                        <th>Entries</th>
                        <th>Price</th>
                        <th>Valid</th>
                        <th>FirstUse</th>
                        <th>Gym</th>
                        <th>Suspend</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Tickets)
                    {
                        {
                    <tr>
                        <td>@ticket.ClientId</td>
                        <td>@ticket.TicketId</td>
                        <td>@GetTicketName(ticket.TicketId)</td>
                        <td>@ticket.Bought</td>
                        <td>@ticket.Barcode</td>
                        <td>@ticket.Entries</td>
                        <td>@ticket.Price</td>
                        <td>@ticket.Valid</td>
                        <td>@ticket.FirstUse</td>
                        <td>@GetGymName(ticket.GymId)</td>
                        @if (ticket.Valid == true)
                        {
                            <td><button class="btn btn-danger" @onclick="(() => SuspendTicket(ticket))">Suspend</button></td>
                        }
                        else
                        {
                            <td><button class="btn btn-outline-success" @onclick="(() => SuspendTicket(ticket))">Validate</button></td>
                        }
                    </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else if (!barcode.IsAdmin)
{
    <div class="row bg-light">
        <label for="Description"></label>
        <table class="table table-bordered">
            <thead class="thead-light">
                <tr>
                    <th>Name</th>
                    <th>Bought</th>
                    <th>BarCode</th>
                    <th>Entries</th>
                    <th>Price</th>
                    <th>Valid</th>
                    <th>FirstUse</th>
                    <th>Gym</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Tickets)
                {
                    if(ticket.Barcode==barcode.Code)
                    {
                        <tr><td>@GetTicketName(ticket.TicketId)</td>
                            <td>@ticket.Bought</td>
                            <td>@ticket.Barcode</td>
                            <td>@ticket.Entries</td>
                            <td>@ticket.Price</td>
                            <td>@ticket.Valid</td>
                            <td>@ticket.FirstUse</td>
                            <td>@GetGymName(ticket.GymId)</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No Permission!</p>
}

@code {
    public DateTime? Date1 { get; set; } = DateTime.Now.AddDays(-10);
    int SelectedTicketID { get; set; }
    List<Data.Models.Client> Clients = new List<Data.Models.Client>();
    List<Data.Models.Room> Gym = new List<Data.Models.Room>();
    List<Data.Models.ClientTickets> Tickets = new List<Data.Models.ClientTickets>();
    public String BarCode { get; set; }
    public Data.Models.ClientTickets NewTicket { get; set; } = new Data.Models.ClientTickets();
    List<Data.Models.SeasonTicket> SeasonTickets = new List<Data.Models.SeasonTicket>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshClients();
        await RefreshSeasonTicket();
        await RefreshClientTickets();
    }

    private async Task RefreshClients()
    {
        Clients = await service.GetClientAsync();
    }
    private async Task RefreshSeasonTicket()
    {
        SeasonTickets = await service.GetTicketAsync();
    }
    private async Task RefreshClientTickets()
    {
        Tickets = await service.GetClientTicketsAsync();
    }
    private async Task RefreshGyms()
    {
        Gym = await service.GetRoomAsync();
    }
    private async Task AddNewTicket()
    {
        foreach (var client in Clients)
        {
            if (BarCode == client.Barcode)
            {
                NewTicket = new Data.Models.ClientTickets();
                NewTicket.ClientId = client.ClientId;
                NewTicket.Entries = 0;
                NewTicket.TicketId = SelectedTicketID;
                NewTicket.Barcode = BarCode;
                NewTicket.FirstUse = Date1.Value;
                NewTicket.Valid = true;
                NewTicket.Bought = DateTime.Now;
                NewTicket.GymId = 1001;

                await service.AddClientTicketsAsync(NewTicket);
                await RefreshClientTickets();
            }
        }
    }
    private async Task SuspendTicket(Data.Models.ClientTickets ticket)
    {
        if (ticket.Valid == true)
            ticket.Valid = false;
        else
            ticket.Valid = true;
        await service.UpdateClientTicketsAsync(ticket);
        await RefreshClientTickets();
    }
    public Data.Models.SeasonTicket NewTicketType { get; set; } = new Data.Models.SeasonTicket();
    private async Task AddNewSeasonTicket()
    {

        NewTicketType.GymId = 1001;
        NewTicketType.Deleted = false;
        await service.AddTicketAsync(NewTicketType);
        await RefreshSeasonTicket();
        NewTicketType = new Data.Models.SeasonTicket();
    }

    public Data.Models.SeasonTicket UpdateSeasonTicket = new Data.Models.SeasonTicket();
    private void SetSeasonTicketForUpdate(Data.Models.SeasonTicket seasonTicket)
    {
        UpdateSeasonTicket = seasonTicket;
    }
    private async Task UpdateClientData()
    {
        await service.UpdateTicketAsync(UpdateSeasonTicket);
        await RefreshClients();
    }
    private async Task DeleteTicket(Data.Models.SeasonTicket ticket)
    {
        await service.DeleteTicketAsync(ticket);
        await RefreshSeasonTicket();
    }
    private string GetTicketName(int ID)
    {
        string Name = "";
        foreach (var ticket in SeasonTickets) { if (ticket.TicketId == ID) { Name = ticket.Name; } }
        return Name;
    }
    private string GetGymName(int ID)
    {
        string Name = "";
        foreach (var gym in Gym) { if (gym.GymId == ID) { Name = gym.Name; } }
        return Name;
    }
}
