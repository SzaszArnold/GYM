@page "/ticket"

@inject Data.Database.GymServices service
<div class="row bg-light">
    <div class="col-5 bg-light m-2 justify-content-start">

        <div class="p-3 mb-3 bg-primary text-white text-center">Add New Client Ticket</div>

        <EditForm Model="@NewTicket">
            <div class="form-group">
                <label for="name">Client bar code</label>
                <input type="text" id="name" class="form-control" @bind="@BarCode" />
            </div>

            <div class="form-group">
                <label for="price">Entries</label>
                <input type="text" id="price" class="form-control" @bind="@NewTicket.Entries" />
            </div>

            <div class="form-group">
                <label for="quantity">Price</label>
                <input type="text" id="quantity" class="form-control" @bind="@NewTicket.Price" />
            </div>

            <div class="text-center p-3 mb-3">
                <button class="btn btn-info" @onclick="AddNewTicket"> Add Ticket</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    List<Data.Models.Client> Clients = new List<Data.Models.Client>();
    public String BarCode { get; set; }
    public Data.Models.ClientTickets NewTicket { get; set; } = new Data.Models.ClientTickets();
    protected override async Task OnInitializedAsync()
    {
        await RefreshClients();
    }

    private async Task RefreshClients()
    {
        Clients = await service.GetClientAsync();
    }
    private async Task AddNewTicket()
    {
        foreach (var client in Clients)
        {
            if (BarCode == client.Barcode)
            {
                await service.AddClientTicketsAsync(NewTicket);
                NewTicket.ClientId = client.ClientId;
                NewTicket.TicketId = 1001;
                NewTicket.Barcode = BarCode;
                NewTicket.Valid = true;
                NewTicket.Bought = DateTime.Now;
                NewTicket.GymId = 1001;
                NewTicket = new Data.Models.ClientTickets();
            }
        }


    }

}
